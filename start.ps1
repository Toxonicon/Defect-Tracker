#!/usr/bin/env pwsh

# Defect Tracker - –ó–∞–ø—É—Å–∫ –≤—Å–µ–≥–æ –ø—Ä–æ–µ–∫—Ç–∞ –æ–¥–Ω–æ–π –∫–æ–º–∞–Ω–¥–æ–π
# –≠—Ç–æ—Ç —Å–∫—Ä–∏–ø—Ç –∑–∞–ø—É—Å–∫–∞–µ—Ç –∏ —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥, –∏ –±—ç–∫–µ–Ω–¥ –æ–¥–Ω–æ–≤—Ä–µ–º–µ–Ω–Ω–æ

Write-Host "üöÄ –ó–∞–ø—É—Å–∫ Defect Tracker..." -ForegroundColor Green
Write-Host "=" * 50 -ForegroundColor Cyan

# –ü–µ—Ä–µ—Ö–æ–¥–∏–º –≤ –∫–æ—Ä–Ω–µ–≤—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –ø—Ä–æ–µ–∫—Ç–∞
$ProjectRoot = Split-Path -Parent $MyInvocation.MyCommand.Path
Set-Location $ProjectRoot

Write-Host "üìÇ –ö–æ—Ä–Ω–µ–≤–∞—è –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è: $ProjectRoot" -ForegroundColor Yellow

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –ø–∞–ø–æ–∫
if (-not (Test-Path "frontend")) {
    Write-Host "‚ùå –ü–∞–ø–∫–∞ frontend –Ω–µ –Ω–∞–π–¥–µ–Ω–∞!" -ForegroundColor Red
    exit 1
}

if (-not (Test-Path "backend")) {
    Write-Host "‚ùå –ü–∞–ø–∫–∞ backend –Ω–µ –Ω–∞–π–¥–µ–Ω–∞!" -ForegroundColor Red
    exit 1
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–ø—É—Å–∫–∞ –ø—Ä–æ—Ü–µ—Å—Å–∞ –≤ —Ñ–æ–Ω–µ
function Start-BackgroundProcess {
    param(
        [string]$WorkingDirectory,
        [string]$Command,
        [string]$Arguments,
        [string]$Name
    )
    
    Write-Host "üîÑ –ó–∞–ø—É—Å–∫ $Name..." -ForegroundColor Blue
    
    $processInfo = New-Object System.Diagnostics.ProcessStartInfo
    $processInfo.FileName = $Command
    $processInfo.Arguments = $Arguments
    $processInfo.WorkingDirectory = $WorkingDirectory
    $processInfo.UseShellExecute = $false
    $processInfo.CreateNoWindow = $false
    
    $process = New-Object System.Diagnostics.Process
    $process.StartInfo = $processInfo
    $process.Start()
    
    return $process
}

# –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ –ø—Ä–æ—Ü–µ—Å—Å—ã Node.js
Write-Host "üîÑ –û—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö –ø—Ä–æ—Ü–µ—Å—Å–æ–≤..." -ForegroundColor Yellow
try {
    Get-Process -Name "node" -ErrorAction SilentlyContinue | Stop-Process -Force
    Start-Sleep -Seconds 2
} catch {
    # –ò–≥–Ω–æ—Ä–∏—Ä—É–µ–º –æ—à–∏–±–∫–∏ –µ—Å–ª–∏ –ø—Ä–æ—Ü–µ—Å—Å—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã
}

# –ó–∞–ø—É—Å–∫–∞–µ–º –±—ç–∫–µ–Ω–¥
Write-Host "üîß –ó–∞–ø—É—Å–∫ Backend (http://localhost:3000)..." -ForegroundColor Green
$backendProcess = Start-Process -FilePath "cmd" -ArgumentList "/c", "cd /d `"$ProjectRoot\backend`" && npm run dev" -PassThru -WindowStyle Minimized

# –ñ–¥–µ–º –Ω–µ–º–Ω–æ–≥–æ –¥–ª—è –∑–∞–ø—É—Å–∫–∞ –±—ç–∫–µ–Ω–¥–∞
Start-Sleep -Seconds 3

# –ó–∞–ø—É—Å–∫–∞–µ–º —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥
Write-Host "üé® –ó–∞–ø—É—Å–∫ Frontend (http://localhost:5173)..." -ForegroundColor Green
$frontendProcess = Start-Process -FilePath "cmd" -ArgumentList "/c", "cd /d `"$ProjectRoot\frontend`" && npm run dev" -PassThru -WindowStyle Minimized

# –ñ–¥–µ–º –∑–∞–ø—É—Å–∫–∞ —Å–µ—Ä–≤–∏—Å–æ–≤
Write-Host "‚è≥ –û–∂–∏–¥–∞–Ω–∏–µ –∑–∞–ø—É—Å–∫–∞ —Å–µ—Ä–≤–∏—Å–æ–≤..." -ForegroundColor Yellow
Start-Sleep -Seconds 5

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å —Å–µ—Ä–≤–∏—Å–æ–≤
Write-Host "üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–µ—Ä–≤–∏—Å–æ–≤..." -ForegroundColor Cyan

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –±—ç–∫–µ–Ω–¥–∞
try {
    $backendResponse = Invoke-RestMethod -Uri "http://localhost:3000/api/health" -Method Get -TimeoutSec 10
    if ($backendResponse.success) {
        Write-Host "‚úÖ Backend —Ä–∞–±–æ—Ç–∞–µ—Ç: http://localhost:3000" -ForegroundColor Green
        Write-Host "   üìä –°—Ç–∞—Ç—É—Å –ë–î: $($backendResponse.database)" -ForegroundColor Gray
        Write-Host "   üîß –†–µ–∂–∏–º: $($backendResponse.mode)" -ForegroundColor Gray
    }
} catch {
    Write-Host "‚ö†Ô∏è  Backend –º–æ–∂–µ—Ç –±—ã—Ç—å –µ—â–µ –∑–∞–ø—É—Å–∫–∞–µ—Ç—Å—è..." -ForegroundColor Yellow
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥–∞
try {
    $frontendResponse = Invoke-WebRequest -Uri "http://localhost:5173" -Method Get -TimeoutSec 10
    if ($frontendResponse.StatusCode -eq 200) {
        Write-Host "‚úÖ Frontend —Ä–∞–±–æ—Ç–∞–µ—Ç: http://localhost:5173" -ForegroundColor Green
    }
} catch {
    Write-Host "‚ö†Ô∏è  Frontend –º–æ–∂–µ—Ç –±—ã—Ç—å –µ—â–µ –∑–∞–ø—É—Å–∫–∞–µ—Ç—Å—è..." -ForegroundColor Yellow
}

Write-Host "" 
Write-Host "üéâ Defect Tracker –∑–∞–ø—É—â–µ–Ω!" -ForegroundColor Green
Write-Host "=" * 50 -ForegroundColor Cyan
Write-Host "üì± Frontend: http://localhost:5173" -ForegroundColor Blue
Write-Host "üîß Backend:  http://localhost:3000" -ForegroundColor Blue
Write-Host "üìã API Docs: http://localhost:3000/api/health" -ForegroundColor Blue
Write-Host "" 
Write-Host "üí° –î–ª—è –≤—Ö–æ–¥–∞ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –ª—é–±—ã–µ –¥–∞–Ω–Ω—ã–µ:" -ForegroundColor Cyan
Write-Host "   üìß Email: test@example.com" -ForegroundColor Gray
Write-Host "   üîë Password: password" -ForegroundColor Gray
Write-Host ""
Write-Host "üåê –û—Ç–∫—Ä—ã–≤–∞—é –±—Ä–∞—É–∑–µ—Ä..." -ForegroundColor Yellow

# –û—Ç–∫—Ä—ã–≤–∞–µ–º –±—Ä–∞—É–∑–µ—Ä
Start-Sleep -Seconds 2
Start-Process "http://localhost:5173"

Write-Host "‚ú® –ì–æ—Ç–æ–≤–æ! –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –∑–∞–ø—É—â–µ–Ω–æ." -ForegroundColor Green
Write-Host "‚ùå –î–ª—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏ –Ω–∞–∂–º–∏—Ç–µ Ctrl+C" -ForegroundColor Red

# –û–∂–∏–¥–∞–µ–º –ø—Ä–µ—Ä—ã–≤–∞–Ω–∏—è –¥–ª—è –∑–∞–∫—Ä—ã—Ç–∏—è
try {
    Write-Host "‚è≥ –ù–∞–∂–º–∏—Ç–µ Ctrl+C –¥–ª—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏..." -ForegroundColor Yellow
    while ($true) {
        Start-Sleep -Seconds 1
    }
} finally {
    Write-Host "üîÑ –û—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å–µ—Ä–≤–∏—Å–æ–≤..." -ForegroundColor Yellow
    
    # –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø—Ä–æ—Ü–µ—Å—Å—ã
    if ($backendProcess -and !$backendProcess.HasExited) {
        $backendProcess.Kill()
    }
    if ($frontendProcess -and !$frontendProcess.HasExited) {
        $frontendProcess.Kill()
    }
    
    # –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –≤—Å–µ Node.js –ø—Ä–æ—Ü–µ—Å—Å—ã
    Get-Process -Name "node" -ErrorAction SilentlyContinue | Stop-Process -Force
    
    Write-Host "‚úÖ –í—Å–µ —Å–µ—Ä–≤–∏—Å—ã –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã." -ForegroundColor Green
}